<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import Project="Mufu.SpecFlow.DotNetCoreFix.tasks"/>
    
  <!--
  Removes the SpecFlow shadow project as part of the clean process.
  -->
  <Target Name="CleanSpecFlowShadowProject" BeforeTargets="BeforeClean">

    <PropertyGroup>
      <SpecFlowShadowProjectPath Condition="'$(SpecFlowShadowProjectPath)' == ''">$(IntermediateOutputPath)SpecFlowShadowProject\</SpecFlowShadowProjectPath>
    </PropertyGroup>

    <ItemGroup>
      <OldSpecFlowShadowProject Include="$(SpecFlowShadowProjectPath)**.*" />
    </ItemGroup>

    <RemoveDir Directories="$(SpecFlowShadowProjectPath)" />
  </Target>

  <Target Name="GetSpecFlowFeatureFiles">

    <ItemGroup>
      <SpecFlowFeature Include="@(None)" Condition="'%(Extension)' == '.feature'" />
    </ItemGroup>
    
  </Target>

  <Target Name="SetSpecFlowShadowProjectLocations">
    <PropertyGroup>
      <SpecFlowShadowProjectPath>$(IntermediateOutputPath)SpecFlowShadowProject\</SpecFlowShadowProjectPath>
      <SpecFlowAppConfig>$(SpecFlowShadowProjectPath)app.config</SpecFlowAppConfig>
      <SpecFlowShadowProject>$(SpecFlowShadowProjectPath)$(MSBuildProjectName).shadowproj</SpecFlowShadowProject>
    </PropertyGroup>
  </Target>

  <!--
  Creates the SpecFlow shadow project structure needed for the SpecFlow command-line tool.
  -->
  <Target 
    Name="CreateSpecFlowShadowProject"
    DependsOnTargets="GetSpecFlowFeatureFiles;SetSpecFlowShadowProjectLocations"
    Inputs="@(SpecFlowFeature)"
    Outputs="@(SpecFlowFeature->'$(SpecFlowShadowProjectPath)%(Identity)');$(SpecFlowAppConfig);$(SpecFlowShadowProject)">
    
    <PropertyGroup>
      <SpecFlowUnitTestProvider Condition="'%(PackageReference.Identity)' == 'NUnit'">nunit</SpecFlowUnitTestProvider>
      <SpecFlowUnitTestProvider Condition="'%(PackageReference.Identity)' == 'MSTest.TestFramework'">mstest</SpecFlowUnitTestProvider>
      <SpecFlowUnitTestProvider Condition="'%(PackageReference.Identity)' == 'xunit'">xunit</SpecFlowUnitTestProvider>
    </PropertyGroup>

    <Warning Text="No test provider references in project. Defaulted to NUnit provider." Condition="'$(SpecFlowUnitTestProvider)' == ''" />

    <PropertyGroup>
      <SpecFlowUnitTestProvider Condition="'$(SpecFlowUnitTestProvider)' == ''">nunit</SpecFlowUnitTestProvider>
    </PropertyGroup>

    <ItemGroup>
      <SpecFlowDotNetCoreFixPlugin Include="$(MSBuildThisFileDirectory)$(RuntimeTarget)\Mufu.SpecFlow.DotNetCoreFix.SpecFlowPlugin.dll" />
    </ItemGroup>

    <MakeDir Directories="$(SpecFlowShadowProjectPath)" />

    <CreateSpecFlowAppConfig OutputAppConfigFile="$(SpecFlowAppConfig)" UnitTestProvider="$(SpecFlowUnitTestProvider)" />
    
    <CreateSpecFlowProjectFile FeatureFiles="@(SpecFlowFeature)" OutputProjectFile="$(SpecFlowShadowProject)" />

    <Copy SourceFiles="@(SpecFlowFeature)" DestinationFiles="@(SpecFlowFeature->'$(SpecFlowShadowProjectPath)%(Identity)')" />
    
  </Target>
  
  <!--
  Generates the SpecFlow code-behind files.
  -->
  <Target
    Name="GenerateSpecFlowCodeBehindCsFiles"
    BeforeTargets="BeforeBuild"
    DependsOnTargets="CreateSpecFlowShadowProject"
    Inputs="@(SpecFlowFeature->'$(SpecFlowShadowProjectPath)%(Identity)');$(SpecFlowAppConfig);$(SpecFlowShadowProject)"
    Outputs="@(SpecFlowFeature->'$(SpecFlowShadowProjectPath)%(Identity).cs')">

    <ItemGroup>
      <SpecFlowPackageReference Include="@(PackageReference)" Condition="'%(Identity)' == 'SpecFlow'" />
    </ItemGroup>

    <PropertyGroup>
      <NuGetPackagesDir>$(NuGetPackageRoot)</NuGetPackagesDir>
      <NuGetPackagesDir Condition="!HasTrailingSlash('$(NuGetPackagesDir)')">$(NuGetPackagesDir)\</NuGetPackagesDir>
      <SpecFlowPackageDir>$(NuGetPackagesDir)@(SpecFlowPackageReference->'%(Identity)\%(Version)')\</SpecFlowPackageDir>
      <SpecFlowToolsPath>$(SpecFlowPackageDir)tools\</SpecFlowToolsPath>
      <SpecFlowToolExe>$(SpecFlowToolsPath)specflow.exe</SpecFlowToolExe>
      <GenerateCodeBehindCommand>"$(SpecFlowToolExe)" generateall "$(SpecFlowShadowProject)"</GenerateCodeBehindCommand>
    </PropertyGroup>
    
    <Exec Command="$(GenerateCodeBehindCommand)" WorkingDirectory="$(MSBuildProjectDirectory)" StandardOutputImportance="Low" />

    <Error Condition="!Exists(@(SpecFlowFeature->'$(SpecFlowShadowProjectPath)%(Identity).cs'))" Text="Failed to generate feature file code behind for @(SpecFlowFeature->'%(Identity)')" />

    <ItemGroup>
      <Compile Include="@(SpecFlowFeature->'$(SpecFlowShadowProjectPath)%(Identity).cs')" />
    </ItemGroup>

    <BindGeneratedSources
      GeneratedSources="@(SpecFlowFeature->'$(SpecFlowShadowProjectPath)%(Identity).cs')"
      FeatureFiles="@(SpecFlowFeature)" />

  </Target>

</Project>